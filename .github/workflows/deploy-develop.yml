name: .NET 8 CI/CD Pipeline for Sharecode.Backend.Api

on:
  push:
    branches: [ main ]
    paths:
      - 'Sharecode.Backend.Api/**'
      - '**.sln'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up .NET 8
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '8.0' # Set to .NET 8

    - name: Restore Dependencies
      run: dotnet restore Sharecode.Backend.Api/Sharecode.Backend.Api.csproj

    - name: Build with dotnet
      run: dotnet build Sharecode.Backend.Api/Sharecode.Backend.Api.csproj --configuration Release --no-restore

    - name: Publish
      run: dotnet publish Sharecode.Backend.Api/Sharecode.Backend.Api.csproj -c Release -o out/Sharecode.Backend.Api

    # Docker steps assume you have a Dockerfile set up in your repository
    - name: Build Docker Image
      run: |
        docker build -t sharecode-backend-api:latest -f Sharecode.Backend.Api/Dockerfile .

    - name: Docker Login
      run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      if: github.ref == 'refs/heads/main'

    - name: Push Docker Image
      run: |
        docker tag sharecode-backend-api:latest your-docker-hub-name/sharecode-backend-api:latest
        docker push your-docker-hub-name/sharecode-backend-api:latest
      if: github.ref == 'refs/heads/main'

    - name: Deploy to VM
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.VM_HOST }}
        username: ${{ secrets.VM_USERNAME }}
        password: ${{ secrets.VM_PASSWORD }}
        script: |
          docker pull your-docker-hub-name/sharecode-backend-api:latest
          docker stop sharecode-backend-api || true
          docker rm sharecode-backend-api || true
          docker run -d --name sharecode-backend-api -p 80:80 your-docker-hub-name/sharecode-backend-api:latest
